"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
"""
import sys
sys.path.insert(0, 'backend')

from app.bd import SessionLocal
from app.crud import authenticate_user, get_user_by_username

# –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
db = SessionLocal()

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
username = "SFDSkeleton"
test_passwords = [
    "Password123",
    "password123",
    "PASSWORD123",
    "Password1",
    "Password12",
]

print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}\n")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
user = get_user_by_username(db, username)
if user:
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:")
    print(f"   ID: {user.id}")
    print(f"   Username: {user.username}")
    print(f"   Email: {user.email}")
    print(f"   Active: {user.is_active}")
    print(f"   Hashed password (first 50 chars): {user.hashed_password[:50]}...")
    print()
    
    print("üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π:")
    for password in test_passwords:
        result = authenticate_user(db, username, password)
        status = "‚úÖ –£–°–ü–ï–•" if result else "‚ùå –ù–ï–£–î–ê–ß–ê"
        print(f"   {status}: '{password}'")
else:
    print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

db.close()

print("\n" + "="*60)
print("üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:")
print("   –ï—Å–ª–∏ –≤—Å–µ –ø–∞—Ä–æ–ª–∏ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç, –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª")
print("   –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å –¥—Ä—É–≥–∏–º –ø–∞—Ä–æ–ª–µ–º –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
print("   –ø—Ä–∏ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–∏.")
print("="*60)