"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã D&D –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
import requests
import time
import random

BASE_URL = "http://localhost:8000"

def print_section(title):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Å–µ–∫—Ü–∏–∏"""
    print("\n" + "=" * 60)
    print(f"  {title}")
    print("=" * 60)

def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ REST API"""
    
    print_section("üß™ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ D&D API")
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    random_num = random.randint(1000, 9999)
    username = f"test_user_{random_num}"
    email = f"test_{random_num}@example.com"
    password = "TestPass123"
    
    print(f"\nüìù –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
    print(f"   Username: {username}")
    print(f"   Email: {email}")
    print(f"   Password: {password}")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
    print_section("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞")
    try:
        response = requests.get(f"{BASE_URL}/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {e}")
        print(f"   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python main.py")
        return
    
    # –¢–µ—Å—Ç 2: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    print_section("2Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    try:
        response = requests.post(f"{BASE_URL}/api/users/register", json={
            "username": username,
            "email": email,
            "password": password,
            "confirm_password": password,
            "character_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ì–µ—Ä–æ–π"
        }, timeout=5)
        
        if response.status_code == 201:
            data = response.json()
            token = data['access_token']
            user = data['user']
            
            print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"   ID: {user['id']}")
            print(f"   Username: {user['username']}")
            print(f"   Email: {user['email']}")
            print(f"   Character: {user['character_name']}")
            print(f"   Token: {token[:50]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.status_code}")
            print(f"   {response.json()}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    time.sleep(1)
    
    # –¢–µ—Å—Ç 3: –í—Ö–æ–¥
    print_section("3Ô∏è‚É£ –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
    try:
        response = requests.post(f"{BASE_URL}/api/users/login", json={
            "username": username,
            "password": password
        }, timeout=5)
        
        if response.status_code == 200:
            data = response.json()
            token = data['access_token']
            
            print("‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!")
            print(f"   Token: {token[:50]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    time.sleep(1)
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    print_section("4Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
    try:
        headers = {"Authorization": f"Bearer {token}"}
        response = requests.get(f"{BASE_URL}/api/users/me", headers=headers, timeout=5)
        
        if response.status_code == 200:
            user = response.json()
            print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞!")
            print(f"   ID: {user['id']}")
            print(f"   Username: {user['username']}")
            print(f"   Email: {user['email']}")
            print(f"   Character: {user['character_name']}")
            print(f"   Active: {user['is_active']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    time.sleep(1)
    
    # –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print_section("5Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    try:
        headers = {"Authorization": f"Bearer {token}"}
        response = requests.get(f"{BASE_URL}/api/users/", headers=headers, timeout=5)
        
        if response.status_code == 200:
            users = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            for idx, user in enumerate(users[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 5
                print(f"   {idx}. {user['username']} - {user['character_name'] or '–±–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'}")
            if len(users) > 5:
                print(f"   ... –∏ –µ—â–µ {len(users) - 5}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –ò—Ç–æ–≥–∏
    print_section("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ Swagger UI: http://localhost:8000/docs")
    print("   2. –û—Ç–∫—Ä–æ–π—Ç–µ test_client.html –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Socket.IO")
    print(f"   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –¥–ª—è Socket.IO:")
    print(f"      {token}")
    print("\nüé≤ –ü—Ä–∏—è—Ç–Ω–æ–π –∏–≥—Ä—ã!")


if __name__ == "__main__":
    test_api()