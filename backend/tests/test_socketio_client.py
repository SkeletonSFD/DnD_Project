"""
–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Socket.IO —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
"""
import socketio
import asyncio
import time

# URL —Å–µ—Ä–≤–µ—Ä–∞
SERVER_URL = "http://localhost:8000"

# –¢–æ–∫–µ–Ω –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ /api/users/login)
# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–≤—Ö–æ–¥–∞
TOKEN = "your_jwt_token_here"


async def test_socketio():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Socket.IO —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    sio = socketio.AsyncClient(logger=True, engineio_logger=True)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    @sio.event
    async def connect():
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É!")
    
    @sio.event
    async def connected(data):
        print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: {data}")
    
    @sio.event
    async def disconnect():
        print("‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
    
    @sio.event
    async def user_joined(data):
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è: {data}")
    
    @sio.event
    async def user_left(data):
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª: {data}")
    
    @sio.event
    async def chat_message(data):
        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {data['username']}: {data['message']}")
    
    @sio.event
    async def dice_rolled(data):
        print(f"üé≤ {data['username']} –±—Ä–æ—Å–∏–ª {data['dice_type']}: {data['result']}")
    
    @sio.event
    async def user_joined_room(data):
        print(f"üö™ {data['username']} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ {data['room_id']}")
    
    @sio.event
    async def user_left_room(data):
        print(f"üö™ {data['username']} –ø–æ–∫–∏–Ω—É–ª –∫–æ–º–Ω–∞—Ç—É {data['room_id']}")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —Å —Ç–æ–∫–µ–Ω–æ–º
        print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {SERVER_URL}...")
        await sio.connect(
            SERVER_URL,
            auth={'token': TOKEN},
            transports=['websocket']
        )
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        await asyncio.sleep(2)
        
        # –¢–µ—Å—Ç 1: –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ
        print("\nüìç –¢–µ—Å—Ç 1: –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ...")
        response = await sio.call('join_room', {'room_id': 'test_room_1'})
        print(f"–û—Ç–≤–µ—Ç: {response}")
        
        await asyncio.sleep(1)
        
        # –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–º–Ω–∞—Ç—É
        print("\nüìç –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–º–Ω–∞—Ç—É...")
        response = await sio.call('send_message', {
            'room_id': 'test_room_1',
            'message': '–ü—Ä–∏–≤–µ—Ç –∏–∑ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞!',
            'timestamp': time.time()
        })
        print(f"–û—Ç–≤–µ—Ç: {response}")
        
        await asyncio.sleep(1)
        
        # –¢–µ—Å—Ç 3: –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞
        print("\nüìç –¢–µ—Å—Ç 3: –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞...")
        import random
        dice_result = random.randint(1, 20)
        response = await sio.call('dice_roll', {
            'room_id': 'test_room_1',
            'dice_type': 'd20',
            'result': dice_result,
            'timestamp': time.time()
        })
        print(f"–û—Ç–≤–µ—Ç: {response}")
        
        await asyncio.sleep(1)
        
        # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("\nüìç –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        response = await sio.call('get_online_users', {'room_id': 'test_room_1'})
        print(f"–û—Ç–≤–µ—Ç: {response}")
        
        await asyncio.sleep(1)
        
        # –¢–µ—Å—Ç 5: –í—ã—Ö–æ–¥ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã
        print("\nüìç –¢–µ—Å—Ç 5: –í—ã—Ö–æ–¥ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã...")
        response = await sio.call('leave_room', {'room_id': 'test_room_1'})
        print(f"–û—Ç–≤–µ—Ç: {response}")
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º
        await asyncio.sleep(2)
        
        # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ
        await sio.disconnect()
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    print("=" * 60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SOCKET.IO –ö–õ–ò–ï–ù–¢–ê")
    print("=" * 60)
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–∞:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python main.py")
    print("2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ API")
    print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TOKEN")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç\n")
    
    if TOKEN == "your_jwt_token_here":
        print("‚ùå –û–®–ò–ë–ö–ê: –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π JWT —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π TOKEN!")
        print("   –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ POST /api/users/login –∏–ª–∏ /api/users/register")
    else:
        asyncio.run(test_socketio())